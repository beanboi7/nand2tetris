// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    

    //choose where to send the load bit to using the address bit MSB
    DMux4Way(in=load, sel=address[13..14], a=r16, b=r162, c=scr, d=kyb); 
    Or(a=r16, b=r162, out=r16load);
    
    //Writing into RAM16K
    Mux16(a=oldin, b=in, sel=r16load, out=muxout);
    RAM16K(in=muxout, load=r16load, address=address[0..13], out=out1, out=oldin);

    //Writing into Screen
    Mux16(a=oldscrin, b=in, sel=scr, out=mux2out);
    Screen(in=mux2out, load=scr, address=address[0..12], out=out2, out=oldscrin);

    //Read the value from KBD register and output it
    Keyboard(out=out3);

    //choose the output acc to address MSBs
    Mux4Way16(a=out1, b=out1, c=out2, d=out3, sel=address[13..14], out=out); 
    



}